##############################################################################
# $Header: /cvsroot/rtg/rtg/targetmaker/etc/targetmaker.cfg.dist,v 1.2 2008/01/19 03:24:14 btoneill Exp $
# $Revision: 1.2 $
# $Author: btoneill $
# $DateTime: 2007/11/30 10:17:06 $
########################################################################
#
# $RTG_CONF_FILE="filename";
# This is the location of the rtg.conf file
#
$RTG_CONF_FILE="/opt/rtg/etc/rtg.conf";
#$RTG_CONF_FILE="/tmp/rtgnew.conf";

#
# $DB_TYPE = "db_type"
# valid values are MySQL, Postgres, Oracle
#
$DB_TYPE = "MySQL";
#
# $community = string;
# This is the default community string for devices
#
$community = "public"; 
#
# $defbits = [32|64];
# Default OID Bits
# depreciated if using 0.8 and $SNMP_USE_64
#
$defbits = 32; 
#
# $output = file;
# Default output target file name (can be overridden on command line)
#
$output      = "/opt/rtg/etc/targets.cfg"; 
#
# $router_file = file;
# Default list of devices to poll (can be overridden on command line)
#
$router_file = "/opt/rtg/etc/routers";
#
# $CREATE_GRAPHING_TABLES = [0|1];
# Create mapping table for use by the targetmaker PHP
# web inteface.
#
$CREATE_GRAPHING_TABLES = 1;
#
# $SNMP_VER = [1|2];
# The default version of SNMP to use
# (see $SNMP_FALL_BACK for info on automatically choosing)
#
$SNMP_VER = 2;
#
# $SNMP_PORT = number;
# The default SNMP port to use
#
$SNMP_PORT = 161;
#
# $INFO = [0|1];
# Print informational messaages
#
$INFO = 1;
#
# $DEBUG = [0|1];
# Print debugging information
#
$DEBUG = 1; 
#
# $DEBUGCLASS = [0|1];
# Debug stat class tracking for modules (no one should use this but me)
$DEBUGCLASS  = 0;               
#
# $DBOFF = [0|1];
# Turn off database queries (debugging use)
#
$DBOFF = 0; 
#
# $EXTENDEDMODE = [0|1];
# If set to 1 enable usage of all the RTG modules. Otherwise just collect basic
# inteface statistics (ie. original RTG rtgtargmkr.pl stats)
#
$EXTENDEDMODE = 0; 
#
# $MODULEDIR = string;
# Directory where the targetmaker modules are stored
#
$MODULEDIR   = "/opt/rtg/targetmaker/etc/rtgmodules";
#
# $TARGETTYPE = [0.7|0.8];
# Format of to target file to generate. 0.8 is recommended, but requires
# atleast RTG 0.8.1
#
$TARGETTYPE  = "0.8";
#
# $MODULEORDERFILE = string;
# Location of the order file used to alter the order of processing
# of targetmaker modules
#
$MODULEORDERFILE = "$MODULEDIR/order.cfg";
#
# $STORAGE_TYPE = [InnoDB|MyISAM];
# The type of table to create in MySQL
#
$STORAGE_TYPE = "MyISAM"; 
#
# $SNMP_FALL_BACK = [0|1];
# Try the highest version of SNMP requested first, then try lower versions if
# the first one fails (currently only two possible to use are v1 and v2
# (This is only useful for RTG 0.8+)
#
$SNMP_FALL_BACK = 1;
#
# $SNMP_USE_64 = [0|1];
# Use 64 bit values if available for the stat. The process will first poll
# for any 64bit equiv values for a stat, if they dont' exist, it will then
# look for the 32bit equiv.
# (this is only useful for RTG 0.8+)
#
$SNMP_USE_64 = 1; 
#
# $SET_INACTIVE = [0|1];
# This sets all interfaces for a device to inactive before it starts querying.
# interfaces are reset to being active when they are successfully polled and added
# to the targets file.
#
$SET_INACTIVE = 1;
#
# $UPDATE_SPEED = [0|1];
# Update the speed in the interface table automatically if it has changed
$UPDATE_SPEED = 1; 
#
# $UPDATE_DESC = [0|1];
# Update the description in the interface table automatically if it has changed
$UPDATE_DESC = 1;               # update the description in the interface table automatically
#
# $PING_HOSTS = [none|tcp|udp|icmp];
# ping hosts before trying to connect via snmp. Use either tcp/udp connection
# to the echo port, or use icmp protocol. Using icmp requires targetmaker 
# to be run as root. 
#
$PING_HOSTS = "udp";

$SNMP_VER = 2;
$SNMP_PORT = 161;

##################################################################
# findsnmp_hosts section
#
# The variables in this section are only used by the
# findsnmp_hosts application. If you are not using this application
# you can ignore everything below here
#
##################################################################
#
# $NETWORK_LIST = filename
# list of networks to scan for hosts with snmp running, used only
# by findsnmp_hosts script
#
$NETWORK_LIST = "/opt/rtg/targetmaker/etc/network.list.".$hostname;
#
# $HOST_TEMPLATE = filename
# list of hosts to add in addition to hosts found while doing
# snmp network scan in findsnmp_hosts script. hosts in this 
# file will over write any hosts found dynamically by the script.
# this file is in the same format as the standard routers file
$HOST_TEMPLATE = "/opt/rtg/targetmaker/etc/hosts.template.".$hostname;

#
# $REPLACE_ROUTERS = [0|1]
# automatically replace routers file at end of findsnmp_hosts?
#
$REPLACE_ROUTERS = 1;

#
# $FORCE_RESOLVE = [0|1]
# use DNS resolution to determine if we should try to ping a host
# in findsnmp_hosts. This will greatly increase the speed
# of the tests, but if you have hosts that you need to poll
# that are not in DNS, you want to disable this
#
$FORCE_RESOLVE = 1;

#
# $CREATE_TABLE2IID = [0|1]
# we can create this table to save SELECT DISTINCT id queries from being
# run by the gui, which can take _alot_ of time on large tables.
#
$CREATE_TABLE2IID = 1;
#
#

#
# Nagios integration
#
$NAGIOSSRV="mn1unag01.arbitrade.com";
$NAGIOSDIR="nagios";
$NAGIOSUSER="nagios";
$NAGIOSPASS="nagios";
$STATUSCGI="cgi-noauth/status.cgi";
$NAGIOSSG="INRTG";

#
# bug in cisco reporting if*Octets in 32 bit mode, but 0's for ifHC*Octets in 64 bit
# this causes us to check to see if ifHC*Octets is 0,if it is, we use 32bit counters
#
$CISCO_64_BUG="1";

# for some reason netsnmp on compaq boxes with gigabit nics
# when running in gigabit show up as 10M. This is bad.
$CPQ_LINUX_GIGABIT_BUG="1";

#
# store target file in SQL so we can easily grab it again
# later and do updated targets file without having to 
# poll every box
#
$STORETARGETINSQL = 1;


#
# What tablespace to store index in if 
# using Oracle
#
$INDEX_TS = "RTG0_INDX";
1;

